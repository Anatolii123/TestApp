<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="28" passed="26">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="2813" started-at="2019-11-28T16:07:25 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="2813" started-at="2019-11-28T16:07:25 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
      <class name="entities.PersonWithCarsTest">
        <test-method status="PASS" signature="getPersonsCars()" name="getPersonsCars" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersonsCars -->
        <test-method status="PASS" signature="getPerson()" name="getPerson" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPerson -->
        <test-method status="PASS" signature="setPersonsCars()" name="setPersonsCars" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPersonsCars -->
        <test-method status="PASS" signature="setPerson()" name="setPerson" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPerson -->
      </class> <!-- entities.PersonWithCarsTest -->
      <class name="entities.StatisticsTest">
        <test-method status="PASS" signature="setUniquevendorcount()" name="setUniquevendorcount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUniquevendorcount -->
        <test-method status="PASS" signature="setPersoncount()" name="setPersoncount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPersoncount -->
        <test-method status="PASS" signature="getUniquevendorcount()" name="getUniquevendorcount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniquevendorcount -->
        <test-method status="PASS" signature="setCarcount()" name="setCarcount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarcount -->
        <test-method status="PASS" signature="getCarcount()" name="getCarcount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCarcount -->
        <test-method status="PASS" signature="getPersoncount()" name="getPersoncount" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersoncount -->
      </class> <!-- entities.StatisticsTest -->
      <class name="entities.CarTest">
        <test-method status="PASS" signature="getModel()" name="getModel" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getModel -->
        <test-method status="PASS" signature="setHorsepower()" name="setHorsepower" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setHorsepower -->
        <test-method status="PASS" signature="testEquals()" name="testEquals" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="setModel()" name="setModel" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setModel -->
        <test-method status="PASS" signature="getId()" name="getId" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getId -->
        <test-method status="PASS" signature="testHashCode()" name="testHashCode" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method status="PASS" signature="obtainVendor()" name="obtainVendor" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtainVendor -->
        <test-method status="PASS" signature="setPersonByPersonId()" name="setPersonByPersonId" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPersonByPersonId -->
        <test-method status="PASS" signature="getHorsepower()" name="getHorsepower" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHorsepower -->
        <test-method status="PASS" signature="getPersonByPersonId()" name="getPersonByPersonId" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersonByPersonId -->
        <test-method status="PASS" signature="setId()" name="setId" duration-ms="0" started-at="2019-11-28T16:07:28 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setId -->
      </class> <!-- entities.CarTest -->
      <class name="dao.PersonCarDaoImplTest">
        <test-method status="PASS" signature="testSavePerson() throws java.lang.Exception" name="testSavePerson" duration-ms="1924" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavePerson -->
        <test-method status="PASS" signature="clear()" name="clear" duration-ms="1877" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="FAIL" signature="testSaveCar()" name="testSaveCar" duration-ms="1924" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at dao.PersonCarDaoImplTest.testSaveCar(PersonCarDaoImplTest.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:74)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:65)
at org.testng.TestRunner$1.run(TestRunner.java:656)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:847)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:685)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:198)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveCar -->
        <test-method status="PASS" signature="getStatistics()" name="getStatistics" duration-ms="1877" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatistics -->
        <test-method status="PASS" signature="getSession()" name="getSession" duration-ms="1877" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSession -->
        <test-method status="PASS" signature="showPersonsCars()" name="showPersonsCars" duration-ms="1940" started-at="2019-11-28T16:07:26 YEKT" finished-at="2019-11-28T16:07:28 YEKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showPersonsCars -->
      </class> <!-- dao.PersonCarDaoImplTest -->
      <class name="controller.PersonCarControllerTest">
        <test-method status="FAIL" signature="savePerson() throws java.lang.Exception" name="savePerson" duration-ms="568" started-at="2019-11-28T16:07:25 YEKT" finished-at="2019-11-28T16:07:26 YEKT">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:74)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:65)
at org.testng.TestRunner$1.run(TestRunner.java:656)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:847)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:685)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:198)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'personCarController': Unsatisfied dependency expressed through field 'personCarService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'service.PersonCarService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
... 46 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'service.PersonCarService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
... 64 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savePerson -->
      </class> <!-- controller.PersonCarControllerTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
